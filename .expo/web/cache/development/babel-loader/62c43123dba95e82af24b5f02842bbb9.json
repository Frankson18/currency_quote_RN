{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nimport React, { Component } from \"react\";\nimport { Defs, Line, LinearGradient, Stop, Text } from \"react-native-svg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var DEFAULT_X_LABELS_HEIGHT_PERCENTAGE = 0.75;\n\nvar AbstractChart = function (_super) {\n  __extends(AbstractChart, _super);\n\n  function AbstractChart() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.calcScaler = function (data) {\n      if (_this.props.fromZero && _this.props.fromNumber) {\n        return Math.max.apply(Math, __spreadArrays(data, [_this.props.fromNumber])) - Math.min.apply(Math, __spreadArrays(data, [0])) || 1;\n      } else if (_this.props.fromZero) {\n        return Math.max.apply(Math, __spreadArrays(data, [0])) - Math.min.apply(Math, __spreadArrays(data, [0])) || 1;\n      } else if (_this.props.fromNumber) {\n        return Math.max.apply(Math, __spreadArrays(data, [_this.props.fromNumber])) - Math.min.apply(Math, __spreadArrays(data, [_this.props.fromNumber])) || 1;\n      } else {\n        return Math.max.apply(Math, data) - Math.min.apply(Math, data) || 1;\n      }\n    };\n\n    _this.calcBaseHeight = function (data, height) {\n      var min = Math.min.apply(Math, data);\n      var max = Math.max.apply(Math, data);\n\n      if (min >= 0 && max >= 0) {\n        return height;\n      } else if (min < 0 && max <= 0) {\n        return 0;\n      } else if (min < 0 && max > 0) {\n        return height * max / _this.calcScaler(data);\n      }\n    };\n\n    _this.calcHeight = function (val, data, height) {\n      var max = Math.max.apply(Math, data);\n      var min = Math.min.apply(Math, data);\n\n      if (min < 0 && max > 0) {\n        return height * (val / _this.calcScaler(data));\n      } else if (min >= 0 && max >= 0) {\n        return _this.props.fromZero ? height * (val / _this.calcScaler(data)) : height * ((val - min) / _this.calcScaler(data));\n      } else if (min < 0 && max <= 0) {\n        return _this.props.fromZero ? height * (val / _this.calcScaler(data)) : height * ((val - max) / _this.calcScaler(data));\n      }\n    };\n\n    _this.renderHorizontalLines = function (config) {\n      var count = config.count,\n          width = config.width,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight,\n          _a = config.verticalLabelsHeightPercentage,\n          verticalLabelsHeightPercentage = _a === void 0 ? DEFAULT_X_LABELS_HEIGHT_PERCENTAGE : _a;\n      var basePosition = height * verticalLabelsHeightPercentage;\n      return __spreadArrays(new Array(count + 1)).map(function (_, i) {\n        var y = basePosition / count * i + paddingTop;\n        return _jsx(Line, _objectSpread({\n          x1: paddingRight,\n          y1: y,\n          x2: width,\n          y2: y\n        }, _this.getPropsForBackgroundLines()), Math.random());\n      });\n    };\n\n    _this.renderHorizontalLine = function (config) {\n      var width = config.width,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight,\n          _a = config.verticalLabelsHeightPercentage,\n          verticalLabelsHeightPercentage = _a === void 0 ? DEFAULT_X_LABELS_HEIGHT_PERCENTAGE : _a;\n      return _jsx(Line, _objectSpread({\n        x1: paddingRight,\n        y1: height * verticalLabelsHeightPercentage + paddingTop,\n        x2: width,\n        y2: height * verticalLabelsHeightPercentage + paddingTop\n      }, _this.getPropsForBackgroundLines()), Math.random());\n    };\n\n    _this.renderHorizontalLabels = function (config) {\n      var count = config.count,\n          data = config.data,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight,\n          _a = config.horizontalLabelRotation,\n          horizontalLabelRotation = _a === void 0 ? 0 : _a,\n          _b = config.decimalPlaces,\n          decimalPlaces = _b === void 0 ? 2 : _b,\n          _c = config.formatYLabel,\n          formatYLabel = _c === void 0 ? function (yLabel) {\n        return yLabel;\n      } : _c,\n          _d = config.verticalLabelsHeightPercentage,\n          verticalLabelsHeightPercentage = _d === void 0 ? DEFAULT_X_LABELS_HEIGHT_PERCENTAGE : _d;\n      var _e = _this.props,\n          _f = _e.yAxisLabel,\n          yAxisLabel = _f === void 0 ? \"\" : _f,\n          _g = _e.yAxisSuffix,\n          yAxisSuffix = _g === void 0 ? \"\" : _g,\n          _h = _e.yLabelsOffset,\n          yLabelsOffset = _h === void 0 ? 12 : _h;\n      return new Array(count === 1 ? 1 : count + 1).fill(1).map(function (_, i) {\n        var yLabel = String(i * count);\n\n        if (count === 1) {\n          yLabel = \"\" + yAxisLabel + formatYLabel(data[0].toFixed(decimalPlaces)) + yAxisSuffix;\n        } else {\n          var label = _this.props.fromZero ? _this.calcScaler(data) / count * i + Math.min.apply(Math, __spreadArrays(data, [0])) : _this.calcScaler(data) / count * i + Math.min.apply(Math, data);\n          yLabel = \"\" + yAxisLabel + formatYLabel(label.toFixed(decimalPlaces)) + yAxisSuffix;\n        }\n\n        var basePosition = height * verticalLabelsHeightPercentage;\n        var x = paddingRight - yLabelsOffset;\n        var y = count === 1 && _this.props.fromZero ? paddingTop + 4 : height * verticalLabelsHeightPercentage - basePosition / count * i + paddingTop;\n        return _jsx(Text, _objectSpread(_objectSpread(_objectSpread({\n          rotation: horizontalLabelRotation,\n          origin: x + \", \" + y,\n          x: x,\n          textAnchor: \"end\",\n          y: y\n        }, _this.getPropsForLabels()), _this.getPropsForHorizontalLabels()), {}, {\n          children: yLabel\n        }), Math.random());\n      });\n    };\n\n    _this.renderVerticalLabels = function (_a) {\n      var _b = _a.labels,\n          labels = _b === void 0 ? [] : _b,\n          width = _a.width,\n          height = _a.height,\n          paddingRight = _a.paddingRight,\n          paddingTop = _a.paddingTop,\n          _c = _a.horizontalOffset,\n          horizontalOffset = _c === void 0 ? 0 : _c,\n          _d = _a.stackedBar,\n          stackedBar = _d === void 0 ? false : _d,\n          _e = _a.verticalLabelRotation,\n          verticalLabelRotation = _e === void 0 ? 0 : _e,\n          _f = _a.formatXLabel,\n          formatXLabel = _f === void 0 ? function (xLabel) {\n        return xLabel;\n      } : _f,\n          _g = _a.verticalLabelsHeightPercentage,\n          verticalLabelsHeightPercentage = _g === void 0 ? DEFAULT_X_LABELS_HEIGHT_PERCENTAGE : _g;\n      var _h = _this.props,\n          _j = _h.xAxisLabel,\n          xAxisLabel = _j === void 0 ? \"\" : _j,\n          _k = _h.xLabelsOffset,\n          xLabelsOffset = _k === void 0 ? 0 : _k,\n          _l = _h.hidePointsAtIndex,\n          hidePointsAtIndex = _l === void 0 ? [] : _l;\n      var fontSize = 12;\n      var fac = 1;\n\n      if (stackedBar) {\n        fac = 0.71;\n      }\n\n      return labels.map(function (label, i) {\n        if (hidePointsAtIndex.includes(i)) {\n          return null;\n        }\n\n        var x = ((width - paddingRight) / labels.length * i + paddingRight + horizontalOffset) * fac;\n        var y = height * verticalLabelsHeightPercentage + paddingTop + fontSize * 2 + xLabelsOffset;\n        return _jsx(Text, _objectSpread(_objectSpread(_objectSpread({\n          origin: x + \", \" + y,\n          rotation: verticalLabelRotation,\n          x: x,\n          y: y,\n          textAnchor: verticalLabelRotation === 0 ? \"middle\" : \"start\"\n        }, _this.getPropsForLabels()), _this.getPropsForVerticalLabels()), {}, {\n          children: \"\" + formatXLabel(label) + xAxisLabel\n        }), Math.random());\n      });\n    };\n\n    _this.renderVerticalLines = function (_a) {\n      var data = _a.data,\n          width = _a.width,\n          height = _a.height,\n          paddingTop = _a.paddingTop,\n          paddingRight = _a.paddingRight,\n          _b = _a.verticalLabelsHeightPercentage,\n          verticalLabelsHeightPercentage = _b === void 0 ? DEFAULT_X_LABELS_HEIGHT_PERCENTAGE : _b;\n      var _c = _this.props.yAxisInterval,\n          yAxisInterval = _c === void 0 ? 1 : _c;\n      return __spreadArrays(new Array(Math.ceil(data.length / yAxisInterval))).map(function (_, i) {\n        return _jsx(Line, _objectSpread({\n          x1: Math.floor((width - paddingRight) / (data.length / yAxisInterval) * i + paddingRight),\n          y1: 0,\n          x2: Math.floor((width - paddingRight) / (data.length / yAxisInterval) * i + paddingRight),\n          y2: height * verticalLabelsHeightPercentage + paddingTop\n        }, _this.getPropsForBackgroundLines()), Math.random());\n      });\n    };\n\n    _this.renderVerticalLine = function (_a) {\n      var height = _a.height,\n          paddingTop = _a.paddingTop,\n          paddingRight = _a.paddingRight,\n          _b = _a.verticalLabelsHeightPercentage,\n          verticalLabelsHeightPercentage = _b === void 0 ? DEFAULT_X_LABELS_HEIGHT_PERCENTAGE : _b;\n      return _jsx(Line, _objectSpread({\n        x1: Math.floor(paddingRight),\n        y1: 0,\n        x2: Math.floor(paddingRight),\n        y2: height * verticalLabelsHeightPercentage + paddingTop\n      }, _this.getPropsForBackgroundLines()), Math.random());\n    };\n\n    _this.renderDefs = function (config) {\n      var width = config.width,\n          height = config.height,\n          backgroundGradientFrom = config.backgroundGradientFrom,\n          backgroundGradientTo = config.backgroundGradientTo,\n          useShadowColorFromDataset = config.useShadowColorFromDataset,\n          data = config.data;\n      var fromOpacity = config.hasOwnProperty(\"backgroundGradientFromOpacity\") ? config.backgroundGradientFromOpacity : 1.0;\n      var toOpacity = config.hasOwnProperty(\"backgroundGradientToOpacity\") ? config.backgroundGradientToOpacity : 1.0;\n      var fillShadowGradient = config.hasOwnProperty(\"fillShadowGradient\") ? config.fillShadowGradient : _this.props.chartConfig.color(1.0);\n      var fillShadowGradientOpacity = config.hasOwnProperty(\"fillShadowGradientOpacity\") ? config.fillShadowGradientOpacity : 0.1;\n      var fillShadowGradientFrom = config.hasOwnProperty(\"fillShadowGradientFrom\") ? config.fillShadowGradientFrom : fillShadowGradient;\n      var fillShadowGradientFromOpacity = config.hasOwnProperty(\"fillShadowGradientFromOpacity\") ? config.fillShadowGradientFromOpacity : fillShadowGradientOpacity;\n      var fillShadowGradientFromOffset = config.hasOwnProperty(\"fillShadowGradientFromOffset\") ? config.fillShadowGradientFromOffset : 0;\n      var fillShadowGradientTo = config.hasOwnProperty(\"fillShadowGradientTo\") ? config.fillShadowGradientTo : _this.props.chartConfig.color(1.0);\n      var fillShadowGradientToOpacity = config.hasOwnProperty(\"fillShadowGradientToOpacity\") ? config.fillShadowGradientToOpacity : 0.1;\n      var fillShadowGradientToOffset = config.hasOwnProperty(\"fillShadowGradientToOffset\") ? config.fillShadowGradientToOffset : 1;\n      return _jsxs(Defs, {\n        children: [_jsxs(LinearGradient, {\n          id: \"backgroundGradient\",\n          x1: 0,\n          y1: height,\n          x2: width,\n          y2: 0,\n          gradientUnits: \"userSpaceOnUse\",\n          children: [_jsx(Stop, {\n            offset: \"0\",\n            stopColor: backgroundGradientFrom,\n            stopOpacity: fromOpacity\n          }), _jsx(Stop, {\n            offset: \"1\",\n            stopColor: backgroundGradientTo,\n            stopOpacity: toOpacity\n          })]\n        }), useShadowColorFromDataset ? data.map(function (dataset, index) {\n          return _jsxs(LinearGradient, {\n            id: \"fillShadowGradientFrom_\" + index,\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: height,\n            gradientUnits: \"userSpaceOnUse\",\n            children: [_jsx(Stop, {\n              offset: fillShadowGradientFromOffset,\n              stopColor: dataset.color ? dataset.color(1.0) : fillShadowGradientFrom,\n              stopOpacity: fillShadowGradientFromOpacity\n            }), _jsx(Stop, {\n              offset: fillShadowGradientToOffset,\n              stopColor: dataset.color ? dataset.color(fillShadowGradientFromOpacity) : fillShadowGradientFrom,\n              stopOpacity: fillShadowGradientToOpacity || 0\n            })]\n          }, \"\" + index);\n        }) : _jsxs(LinearGradient, {\n          id: \"fillShadowGradientFrom\",\n          x1: 0,\n          y1: 0,\n          x2: 0,\n          y2: height,\n          gradientUnits: \"userSpaceOnUse\",\n          children: [_jsx(Stop, {\n            offset: fillShadowGradientFromOffset,\n            stopColor: fillShadowGradientFrom,\n            stopOpacity: fillShadowGradientFromOpacity\n          }), _jsx(Stop, {\n            offset: fillShadowGradientToOffset,\n            stopColor: fillShadowGradientTo || fillShadowGradientFrom,\n            stopOpacity: fillShadowGradientToOpacity || 0\n          })]\n        })]\n      });\n    };\n\n    return _this;\n  }\n\n  AbstractChart.prototype.getPropsForBackgroundLines = function () {\n    var _a = this.props.chartConfig.propsForBackgroundLines,\n        propsForBackgroundLines = _a === void 0 ? {} : _a;\n    return __assign({\n      stroke: this.props.chartConfig.color(0.2),\n      strokeDasharray: \"5, 10\",\n      strokeWidth: 1\n    }, propsForBackgroundLines);\n  };\n\n  AbstractChart.prototype.getPropsForLabels = function () {\n    var _a = this.props.chartConfig,\n        _b = _a.propsForLabels,\n        propsForLabels = _b === void 0 ? {} : _b,\n        color = _a.color,\n        _c = _a.labelColor,\n        labelColor = _c === void 0 ? color : _c;\n    return __assign({\n      fontSize: 12,\n      fill: labelColor(0.8)\n    }, propsForLabels);\n  };\n\n  AbstractChart.prototype.getPropsForVerticalLabels = function () {\n    var _a = this.props.chartConfig,\n        _b = _a.propsForVerticalLabels,\n        propsForVerticalLabels = _b === void 0 ? {} : _b,\n        color = _a.color,\n        _c = _a.labelColor,\n        labelColor = _c === void 0 ? color : _c;\n    return __assign({\n      fill: labelColor(0.8)\n    }, propsForVerticalLabels);\n  };\n\n  AbstractChart.prototype.getPropsForHorizontalLabels = function () {\n    var _a = this.props.chartConfig,\n        _b = _a.propsForHorizontalLabels,\n        propsForHorizontalLabels = _b === void 0 ? {} : _b,\n        color = _a.color,\n        _c = _a.labelColor,\n        labelColor = _c === void 0 ? color : _c;\n    return __assign({\n      fill: labelColor(0.8)\n    }, propsForHorizontalLabels);\n  };\n\n  return AbstractChart;\n}(Component);\n\nexport default AbstractChart;","map":{"version":3,"mappings":"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","names":["React","Component","Defs","Line","LinearGradient","Stop","Text","DEFAULT_X_LABELS_HEIGHT_PERCENTAGE","__extends","_this","data","props","fromZero","fromNumber","Math","max","apply","__spreadArrays","min","height","calcScaler","val","config","width","paddingTop","paddingRight","_a","verticalLabelsHeightPercentage","basePosition","Array","count","map","_","i","y","getPropsForBackgroundLines","random","horizontalLabelRotation","_b","decimalPlaces","_c","formatYLabel","yLabel","_d","_f","yAxisLabel","_g","yAxisSuffix","_h","yLabelsOffset","fill","String","toFixed","label","x","getPropsForLabels","getPropsForHorizontalLabels","labels","horizontalOffset","stackedBar","_e","verticalLabelRotation","formatXLabel","_j","xAxisLabel","_k","xLabelsOffset","_l","hidePointsAtIndex","fontSize","fac","includes","length","getPropsForVerticalLabels","yAxisInterval","ceil","floor","backgroundGradientFrom","backgroundGradientTo","useShadowColorFromDataset","fromOpacity","hasOwnProperty","backgroundGradientFromOpacity","toOpacity","backgroundGradientToOpacity","fillShadowGradient","chartConfig","color","fillShadowGradientOpacity","fillShadowGradientFrom","fillShadowGradientFromOpacity","fillShadowGradientFromOffset","fillShadowGradientTo","fillShadowGradientToOpacity","fillShadowGradientToOffset","dataset","index","AbstractChart","propsForBackgroundLines","stroke","strokeDasharray","strokeWidth","propsForLabels","labelColor","propsForVerticalLabels","propsForHorizontalLabels"],"sourceRoot":"","sources":["../src/AbstractChart.tsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Defs, Line, LinearGradient, Stop, Text } from \"react-native-svg\";\n\nimport { ChartConfig, Dataset, PartialBy } from \"./HelperTypes\";\n\nexport interface AbstractChartProps {\n  fromZero?: boolean;\n  fromNumber?: number;\n  chartConfig?: AbstractChartConfig;\n  yAxisLabel?: string;\n  yAxisSuffix?: string;\n  yLabelsOffset?: number;\n  yAxisInterval?: number;\n  xAxisLabel?: string;\n  xLabelsOffset?: number;\n  hidePointsAtIndex?: number[];\n}\n\nexport interface AbstractChartConfig extends ChartConfig {\n  count?: number;\n  data?: Dataset[];\n  width?: number;\n  height?: number;\n  paddingTop?: number;\n  paddingRight?: number;\n  horizontalLabelRotation?: number;\n  formatYLabel?: (yLabel: string) => string;\n  labels?: string[];\n  horizontalOffset?: number;\n  stackedBar?: boolean;\n  verticalLabelRotation?: number;\n  formatXLabel?: (xLabel: string) => string;\n  verticalLabelsHeightPercentage?: number;\n  formatTopBarValue?: (topBarValue: number) => string | number;\n}\n\nexport type AbstractChartState = {};\n\nexport const DEFAULT_X_LABELS_HEIGHT_PERCENTAGE = 0.75;\n\nclass AbstractChart<\n  IProps extends AbstractChartProps,\n  IState extends AbstractChartState\n> extends Component<AbstractChartProps & IProps, AbstractChartState & IState> {\n  calcScaler = (data: number[]) => {\n    if (this.props.fromZero && this.props.fromNumber) {\n      return Math.max(...data, this.props.fromNumber) - Math.min(...data, 0) || 1;\n    } else if (this.props.fromZero) {\n      return Math.max(...data, 0) - Math.min(...data, 0) || 1;\n    } else if (this.props.fromNumber) {\n      return (\n        Math.max(...data, this.props.fromNumber) -\n          Math.min(...data, this.props.fromNumber) || 1\n      );\n    } else {\n      return Math.max(...data) - Math.min(...data) || 1;\n    }\n  };\n\n  calcBaseHeight = (data: number[], height: number) => {\n    const min = Math.min(...data);\n    const max = Math.max(...data);\n    if (min >= 0 && max >= 0) {\n      return height;\n    } else if (min < 0 && max <= 0) {\n      return 0;\n    } else if (min < 0 && max > 0) {\n      return (height * max) / this.calcScaler(data);\n    }\n  };\n\n  calcHeight = (val: number, data: number[], height: number) => {\n    const max = Math.max(...data);\n    const min = Math.min(...data);\n\n    if (min < 0 && max > 0) {\n      return height * (val / this.calcScaler(data));\n    } else if (min >= 0 && max >= 0) {\n      return this.props.fromZero\n        ? height * (val / this.calcScaler(data))\n        : height * ((val - min) / this.calcScaler(data));\n    } else if (min < 0 && max <= 0) {\n      return this.props.fromZero\n        ? height * (val / this.calcScaler(data))\n        : height * ((val - max) / this.calcScaler(data));\n    }\n  };\n\n  getPropsForBackgroundLines() {\n    const { propsForBackgroundLines = {} } = this.props.chartConfig;\n    return {\n      stroke: this.props.chartConfig.color(0.2),\n      strokeDasharray: \"5, 10\",\n      strokeWidth: 1,\n      ...propsForBackgroundLines\n    };\n  }\n\n  getPropsForLabels() {\n    const {\n      propsForLabels = {},\n      color,\n      labelColor = color\n    } = this.props.chartConfig;\n    return {\n      fontSize: 12,\n      fill: labelColor(0.8),\n      ...propsForLabels\n    };\n  }\n\n  getPropsForVerticalLabels() {\n    const {\n      propsForVerticalLabels = {},\n      color,\n      labelColor = color\n    } = this.props.chartConfig;\n    return {\n      fill: labelColor(0.8),\n      ...propsForVerticalLabels\n    };\n  }\n\n  getPropsForHorizontalLabels() {\n    const {\n      propsForHorizontalLabels = {},\n      color,\n      labelColor = color\n    } = this.props.chartConfig;\n    return {\n      fill: labelColor(0.8),\n      ...propsForHorizontalLabels\n    };\n  }\n\n  renderHorizontalLines = config => {\n    const {\n      count,\n      width,\n      height,\n      paddingTop,\n      paddingRight,\n      verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n    } = config;\n    const basePosition = height * verticalLabelsHeightPercentage;\n\n    return [...new Array(count + 1)].map((_, i) => {\n      const y = (basePosition / count) * i + paddingTop;\n      return (\n        <Line\n          key={Math.random()}\n          x1={paddingRight}\n          y1={y}\n          x2={width}\n          y2={y}\n          {...this.getPropsForBackgroundLines()}\n        />\n      );\n    });\n  };\n\n  renderHorizontalLine = config => {\n    const {\n      width,\n      height,\n      paddingTop,\n      paddingRight,\n      verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n    } = config;\n    return (\n      <Line\n        key={Math.random()}\n        x1={paddingRight}\n        y1={height * verticalLabelsHeightPercentage + paddingTop}\n        x2={width}\n        y2={height * verticalLabelsHeightPercentage + paddingTop}\n        {...this.getPropsForBackgroundLines()}\n      />\n    );\n  };\n\n  renderHorizontalLabels = (\n    config: Omit<AbstractChartConfig, \"data\"> & { data: number[] }\n  ) => {\n    const {\n      count,\n      data,\n      height,\n      paddingTop,\n      paddingRight,\n      horizontalLabelRotation = 0,\n      decimalPlaces = 2,\n      formatYLabel = (yLabel: string) => yLabel,\n      verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n    } = config;\n\n    const {\n      yAxisLabel = \"\",\n      yAxisSuffix = \"\",\n      yLabelsOffset = 12\n    } = this.props;\n    return new Array(count === 1 ? 1 : count + 1).fill(1).map((_, i) => {\n      let yLabel = String(i * count);\n\n      if (count === 1) {\n        yLabel = `${yAxisLabel}${formatYLabel(\n          data[0].toFixed(decimalPlaces)\n        )}${yAxisSuffix}`;\n      } else {\n        const label = this.props.fromZero\n          ? (this.calcScaler(data) / count) * i + Math.min(...data, 0)\n          : (this.calcScaler(data) / count) * i + Math.min(...data);\n        yLabel = `${yAxisLabel}${formatYLabel(\n          label.toFixed(decimalPlaces)\n        )}${yAxisSuffix}`;\n      }\n\n      const basePosition = height * verticalLabelsHeightPercentage;\n      const x = paddingRight - yLabelsOffset;\n      const y =\n        count === 1 && this.props.fromZero\n          ? paddingTop + 4\n          : height * verticalLabelsHeightPercentage -\n            (basePosition / count) * i +\n            paddingTop;\n      return (\n        <Text\n          rotation={horizontalLabelRotation}\n          origin={`${x}, ${y}`}\n          key={Math.random()}\n          x={x}\n          textAnchor=\"end\"\n          y={y}\n          {...this.getPropsForLabels()}\n          {...this.getPropsForHorizontalLabels()}\n        >\n          {yLabel}\n        </Text>\n      );\n    });\n  };\n\n  renderVerticalLabels = ({\n    labels = [],\n    width,\n    height,\n    paddingRight,\n    paddingTop,\n    horizontalOffset = 0,\n    stackedBar = false,\n    verticalLabelRotation = 0,\n    formatXLabel = xLabel => xLabel,\n    verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n  }: Pick<\n    AbstractChartConfig,\n    | \"labels\"\n    | \"width\"\n    | \"height\"\n    | \"paddingRight\"\n    | \"paddingTop\"\n    | \"horizontalOffset\"\n    | \"stackedBar\"\n    | \"verticalLabelRotation\"\n    | \"formatXLabel\"\n    | \"verticalLabelsHeightPercentage\"\n  >) => {\n    const {\n      xAxisLabel = \"\",\n      xLabelsOffset = 0,\n      hidePointsAtIndex = []\n    } = this.props;\n\n    const fontSize = 12;\n\n    let fac = 1;\n    if (stackedBar) {\n      fac = 0.71;\n    }\n\n    return labels.map((label, i) => {\n      if (hidePointsAtIndex.includes(i)) {\n        return null;\n      }\n\n      const x =\n        (((width - paddingRight) / labels.length) * i +\n          paddingRight +\n          horizontalOffset) *\n        fac;\n\n      const y =\n        height * verticalLabelsHeightPercentage +\n        paddingTop +\n        fontSize * 2 +\n        xLabelsOffset;\n\n      return (\n        <Text\n          origin={`${x}, ${y}`}\n          rotation={verticalLabelRotation}\n          key={Math.random()}\n          x={x}\n          y={y}\n          textAnchor={verticalLabelRotation === 0 ? \"middle\" : \"start\"}\n          {...this.getPropsForLabels()}\n          {...this.getPropsForVerticalLabels()}\n        >\n          {`${formatXLabel(label)}${xAxisLabel}`}\n        </Text>\n      );\n    });\n  };\n\n  renderVerticalLines = ({\n    data,\n    width,\n    height,\n    paddingTop,\n    paddingRight,\n    verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n  }: Omit<\n    Pick<\n      AbstractChartConfig,\n      | \"data\"\n      | \"width\"\n      | \"height\"\n      | \"paddingRight\"\n      | \"paddingTop\"\n      | \"verticalLabelsHeightPercentage\"\n    >,\n    \"data\"\n  > & { data: number[] }) => {\n    const { yAxisInterval = 1 } = this.props;\n\n    return [...new Array(Math.ceil(data.length / yAxisInterval))].map(\n      (_, i) => {\n        return (\n          <Line\n            key={Math.random()}\n            x1={Math.floor(\n              ((width - paddingRight) / (data.length / yAxisInterval)) * i +\n                paddingRight\n            )}\n            y1={0}\n            x2={Math.floor(\n              ((width - paddingRight) / (data.length / yAxisInterval)) * i +\n                paddingRight\n            )}\n            y2={height * verticalLabelsHeightPercentage + paddingTop}\n            {...this.getPropsForBackgroundLines()}\n          />\n        );\n      }\n    );\n  };\n\n  renderVerticalLine = ({\n    height,\n    paddingTop,\n    paddingRight,\n    verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n  }: Pick<\n    AbstractChartConfig,\n    \"height\" | \"paddingRight\" | \"paddingTop\" | \"verticalLabelsHeightPercentage\"\n  >) => (\n    <Line\n      key={Math.random()}\n      x1={Math.floor(paddingRight)}\n      y1={0}\n      x2={Math.floor(paddingRight)}\n      y2={height * verticalLabelsHeightPercentage + paddingTop}\n      {...this.getPropsForBackgroundLines()}\n    />\n  );\n\n  renderDefs = (\n    config: Pick<\n      PartialBy<\n        AbstractChartConfig,\n        | \"backgroundGradientFromOpacity\"\n        | \"backgroundGradientToOpacity\"\n        | \"fillShadowGradient\"\n        | \"fillShadowGradientOpacity\"\n        | \"fillShadowGradientFrom\"\n        | \"fillShadowGradientFromOpacity\"\n        | \"fillShadowGradientFromOffset\"\n        | \"fillShadowGradientTo\"\n        | \"fillShadowGradientToOpacity\"\n        | \"fillShadowGradientToOffset\"\n      >,\n      | \"width\"\n      | \"height\"\n      | \"backgroundGradientFrom\"\n      | \"backgroundGradientTo\"\n      | \"useShadowColorFromDataset\"\n      | \"data\"\n      | \"backgroundGradientFromOpacity\"\n      | \"backgroundGradientToOpacity\"\n      | \"fillShadowGradient\"\n      | \"fillShadowGradientOpacity\"\n      | \"fillShadowGradientFrom\"\n      | \"fillShadowGradientFromOpacity\"\n      | \"fillShadowGradientFromOffset\"\n      | \"fillShadowGradientTo\"\n      | \"fillShadowGradientToOpacity\"\n      | \"fillShadowGradientToOffset\"\n    >\n  ) => {\n    const {\n      width,\n      height,\n      backgroundGradientFrom,\n      backgroundGradientTo,\n      useShadowColorFromDataset,\n      data\n    } = config;\n\n    const fromOpacity = config.hasOwnProperty(\"backgroundGradientFromOpacity\")\n      ? config.backgroundGradientFromOpacity\n      : 1.0;\n    const toOpacity = config.hasOwnProperty(\"backgroundGradientToOpacity\")\n      ? config.backgroundGradientToOpacity\n      : 1.0;\n\n    const fillShadowGradient = config.hasOwnProperty(\"fillShadowGradient\")\n      ? config.fillShadowGradient\n      : this.props.chartConfig.color(1.0);\n\n    const fillShadowGradientOpacity = config.hasOwnProperty(\n      \"fillShadowGradientOpacity\"\n    )\n      ? config.fillShadowGradientOpacity\n      : 0.1;\n\n    const fillShadowGradientFrom = config.hasOwnProperty(\n      \"fillShadowGradientFrom\"\n    )\n      ? config.fillShadowGradientFrom\n      : fillShadowGradient;\n\n    const fillShadowGradientFromOpacity = config.hasOwnProperty(\n      \"fillShadowGradientFromOpacity\"\n    )\n      ? config.fillShadowGradientFromOpacity\n      : fillShadowGradientOpacity;\n\n    const fillShadowGradientFromOffset = config.hasOwnProperty(\n      \"fillShadowGradientFromOffset\"\n    )\n      ? config.fillShadowGradientFromOffset\n      : 0;\n\n    const fillShadowGradientTo = config.hasOwnProperty(\"fillShadowGradientTo\")\n      ? config.fillShadowGradientTo\n      : this.props.chartConfig.color(1.0);\n\n    const fillShadowGradientToOpacity = config.hasOwnProperty(\n      \"fillShadowGradientToOpacity\"\n    )\n      ? config.fillShadowGradientToOpacity\n      : 0.1;\n\n    const fillShadowGradientToOffset = config.hasOwnProperty(\n      \"fillShadowGradientToOffset\"\n    )\n      ? config.fillShadowGradientToOffset\n      : 1;\n\n    return (\n      <Defs>\n        <LinearGradient\n          id=\"backgroundGradient\"\n          x1={0}\n          y1={height}\n          x2={width}\n          y2={0}\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <Stop\n            offset=\"0\"\n            stopColor={backgroundGradientFrom}\n            stopOpacity={fromOpacity}\n          />\n          <Stop\n            offset=\"1\"\n            stopColor={backgroundGradientTo}\n            stopOpacity={toOpacity}\n          />\n        </LinearGradient>\n        {useShadowColorFromDataset ? (\n          data.map((dataset, index) => (\n            <LinearGradient\n              id={`fillShadowGradientFrom_${index}`}\n              key={`${index}`}\n              x1={0}\n              y1={0}\n              x2={0}\n              y2={height}\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <Stop\n                offset={fillShadowGradientFromOffset}\n                stopColor={\n                  dataset.color ? dataset.color(1.0) : fillShadowGradientFrom\n                }\n                stopOpacity={fillShadowGradientFromOpacity}\n              />\n              <Stop\n                offset={fillShadowGradientToOffset}\n                stopColor={\n                  dataset.color\n                    ? dataset.color(fillShadowGradientFromOpacity)\n                    : fillShadowGradientFrom\n                }\n                stopOpacity={fillShadowGradientToOpacity || 0}\n              />\n            </LinearGradient>\n          ))\n        ) : (\n          <LinearGradient\n            id=\"fillShadowGradientFrom\"\n            x1={0}\n            y1={0}\n            x2={0}\n            y2={height}\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop\n              offset={fillShadowGradientFromOffset}\n              stopColor={fillShadowGradientFrom}\n              stopOpacity={fillShadowGradientFromOpacity}\n            />\n            <Stop\n              offset={fillShadowGradientToOffset}\n              stopColor={fillShadowGradientTo || fillShadowGradientFrom}\n              stopOpacity={fillShadowGradientToOpacity || 0}\n            />\n          </LinearGradient>\n        )}\n      </Defs>\n    );\n  };\n}\n\nexport default AbstractChart;\n"]},"metadata":{},"sourceType":"module"}