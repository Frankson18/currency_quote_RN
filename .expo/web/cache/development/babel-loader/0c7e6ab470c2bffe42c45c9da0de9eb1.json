{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport Pie from \"paths-js/pie\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { G, Path, Rect, Svg, Text } from \"react-native-svg\";\nimport AbstractChart from \"./AbstractChart\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ProgressChart = function (_super) {\n  __extends(ProgressChart, _super);\n\n  function ProgressChart() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ProgressChart.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        width = _a.width,\n        height = _a.height,\n        style = _a.style,\n        data = _a.data,\n        hideLegend = _a.hideLegend,\n        strokeWidth = _a.strokeWidth,\n        radius = _a.radius;\n    var _b = style.borderRadius,\n        borderRadius = _b === void 0 ? 0 : _b,\n        _c = style.margin,\n        margin = _c === void 0 ? 0 : _c,\n        _d = style.marginRight,\n        marginRight = _d === void 0 ? 0 : _d;\n\n    if (Array.isArray(data)) {\n      data = {\n        data: data\n      };\n    }\n\n    var pies = data.data.map(function (pieData, i) {\n      var r = (height / 2 - 32) / (Array.isArray(data) ? data.length : data.data.length) * i + radius;\n      return Pie({\n        r: r,\n        R: r,\n        center: [0, 0],\n        data: [pieData, 1 - pieData],\n        accessor: function accessor(x) {\n          return x;\n        }\n      });\n    });\n    var pieBackgrounds = data.data.map(function (pieData, i) {\n      var r = (height / 2 - 32) / (Array.isArray(data) ? data.length : data.data.length) * i + radius;\n      return Pie({\n        r: r,\n        R: r,\n        center: [0, 0],\n        data: [0.999, 0.001],\n        accessor: function accessor(x) {\n          return x;\n        }\n      });\n    });\n\n    var withLabel = function withLabel(i) {\n      return data.labels && data.labels[i];\n    };\n\n    var withColor = function withColor(i) {\n      return data.colors && data.colors[i];\n    };\n\n    var legend = !hideLegend && _jsxs(_Fragment, {\n      children: [_jsx(G, {\n        children: pies.map(function (_, i) {\n          return _jsx(Rect, {\n            width: \"16px\",\n            height: \"16px\",\n            fill: _this.props.withCustomBarColorFromData ? withColor(i) : _this.props.chartConfig.color(0.2 * (i + 1), i),\n            rx: 8,\n            ry: 8,\n            x: _this.props.width / 2.5 - 24,\n            y: -(_this.props.height / 2.5) + _this.props.height * 0.8 / (Array.isArray(data) ? data.length : data.data.length) * i + 12\n          }, Math.random());\n        })\n      }), _jsx(G, {\n        children: pies.map(function (_, i) {\n          return _jsx(Text, _objectSpread(_objectSpread({\n            x: _this.props.width / 2.5,\n            y: -(_this.props.height / 2.5) + _this.props.height * 0.8 / (Array.isArray(data) ? data.length : data.data.length) * i + 12 * 2\n          }, _this.getPropsForLabels()), {}, {\n            children: withLabel(i) ? data.labels[i] + \" \" + Math.round(100 * data.data[i]) + \"%\" : Math.round(100 * data.data[i]) + \"%\"\n          }), Math.random());\n        })\n      })]\n    });\n\n    return _jsx(View, {\n      style: __assign({\n        width: width,\n        height: height,\n        padding: 0\n      }, style),\n      children: _jsxs(Svg, {\n        width: width - margin * 2 - marginRight,\n        height: height,\n        children: [this.renderDefs(__assign({\n          width: this.props.height,\n          height: this.props.height\n        }, this.props.chartConfig)), _jsx(Rect, {\n          width: \"100%\",\n          height: this.props.height,\n          rx: borderRadius,\n          ry: borderRadius,\n          fill: \"url(#backgroundGradient)\"\n        }), _jsxs(G, {\n          x: this.props.width / (hideLegend ? 2 : 2.5),\n          y: this.props.height / 2,\n          children: [_jsx(G, {\n            children: pieBackgrounds.map(function (pie, i) {\n              return _jsx(Path, {\n                d: pie.curves[0].sector.path.print(),\n                strokeWidth: strokeWidth,\n                stroke: _this.props.chartConfig.color(0.2, i)\n              }, Math.random());\n            })\n          }), _jsx(G, {\n            children: pies.map(function (pie, i) {\n              return _jsx(Path, {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                d: pie.curves[0].sector.path.print(),\n                strokeWidth: strokeWidth,\n                stroke: _this.props.withCustomBarColorFromData ? withColor(i) : _this.props.chartConfig.color(i / pies.length * 0.5 + 0.5, i)\n              }, Math.random());\n            })\n          }), legend]\n        })]\n      })\n    });\n  };\n\n  ProgressChart.defaultProps = {\n    style: {},\n    strokeWidth: 16,\n    radius: 32\n  };\n  return ProgressChart;\n}(AbstractChart);\n\nexport default ProgressChart;","map":{"version":3,"mappings":"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","names":["Pie","React","G","Path","Rect","Svg","Text","AbstractChart","__extends","ProgressChart","props","width","height","style","data","hideLegend","strokeWidth","radius","_b","_c","margin","_d","marginRight","Array","isArray","pies","map","pieData","i","r","length","R","center","accessor","x","pieBackgrounds","withLabel","labels","withColor","colors","legend","_","_this","withCustomBarColorFromData","chartConfig","color","Math","random","getPropsForLabels","round","__assign","padding","renderDefs","borderRadius","pie","curves","sector","path","print"],"sourceRoot":"","sources":["../src/ProgressChart.tsx"],"sourcesContent":["import Pie from \"paths-js/pie\";\nimport React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\nimport { G, Path, Rect, Svg, Text } from \"react-native-svg\";\n\nimport AbstractChart, {\n  AbstractChartConfig,\n  AbstractChartProps\n} from \"./AbstractChart\";\n\nexport type ProgressChartData =\n  | Array<number>\n  | { labels?: Array<string>; colors?: Array<string>; data: Array<number> };\n\nexport interface ProgressChartProps extends AbstractChartProps {\n  data: ProgressChartData;\n  width: number;\n  height: number;\n  center?: Array<number>;\n  absolute?: boolean;\n  hasLegend?: boolean;\n  style?: Partial<ViewStyle>;\n  chartConfig?: AbstractChartConfig;\n  hideLegend?: boolean;\n  strokeWidth?: number;\n  radius?: number;\n  withCustomBarColorFromData?: boolean;\n}\n\ntype ProgressChartState = {};\n\nclass ProgressChart extends AbstractChart<\n  ProgressChartProps,\n  ProgressChartState\n> {\n  public static defaultProps = { style: {}, strokeWidth: 16, radius: 32 };\n\n  render() {\n    let {\n      width,\n      height,\n      style,\n      data,\n      hideLegend,\n      strokeWidth,\n      radius\n    } = this.props;\n\n    const { borderRadius = 0, margin = 0, marginRight = 0 } = style;\n\n    if (Array.isArray(data)) {\n      data = {\n        data\n      };\n    }\n\n    const pies = data.data.map((pieData, i) => {\n      const r =\n        ((height / 2 - 32) /\n          (Array.isArray(data) ? data.length : data.data.length)) *\n          i +\n        radius;\n\n      return Pie({\n        r,\n        R: r,\n        center: [0, 0],\n        data: [pieData, 1 - pieData],\n        accessor(x: string) {\n          return x;\n        }\n      });\n    });\n\n    const pieBackgrounds = data.data.map((pieData, i) => {\n      const r =\n        ((height / 2 - 32) /\n          (Array.isArray(data) ? data.length : data.data.length)) *\n          i +\n        radius;\n      return Pie({\n        r,\n        R: r,\n        center: [0, 0],\n        data: [0.999, 0.001],\n        accessor(x: string) {\n          return x;\n        }\n      });\n    });\n\n    const withLabel = (i: number) =>\n      (data as any).labels && (data as any).labels[i];\n\n    const withColor = (i: number) =>\n      (data as any).colors && (data as any).colors[i];\n\n    const legend = !hideLegend && (\n      <>\n        <G>\n          {pies.map((_, i) => {\n            return (\n              <Rect\n                key={Math.random()}\n                width=\"16px\"\n                height=\"16px\"\n                fill={\n                  this.props.withCustomBarColorFromData\n                    ? withColor(i)\n                    : this.props.chartConfig.color(0.2 * (i + 1), i)\n                }\n                rx={8}\n                ry={8}\n                x={this.props.width / 2.5 - 24}\n                y={\n                  -(this.props.height / 2.5) +\n                  ((this.props.height * 0.8) /\n                    (Array.isArray(data) ? data.length : data.data.length)) *\n                    i +\n                  12\n                }\n              />\n            );\n          })}\n        </G>\n        <G>\n          {pies.map((_, i) => {\n            return (\n              <Text\n                key={Math.random()}\n                x={this.props.width / 2.5}\n                y={\n                  -(this.props.height / 2.5) +\n                  ((this.props.height * 0.8) /\n                    (Array.isArray(data) ? data.length : data.data.length)) *\n                    i +\n                  12 * 2\n                }\n                {...this.getPropsForLabels()}\n              >\n                {withLabel(i)\n                  ? `${(data as any).labels[i]} ${Math.round(\n                      100 * (data as any).data[i]\n                    )}%`\n                  : `${Math.round(100 * (data as any).data[i])}%`}\n              </Text>\n            );\n          })}\n        </G>\n      </>\n    );\n\n    return (\n      <View\n        style={{\n          width,\n          height,\n          padding: 0,\n          ...style\n        }}\n      >\n        <Svg\n          width={width - (margin as number) * 2 - (marginRight as number)}\n          height={height}\n        >\n          {this.renderDefs({\n            width: this.props.height,\n            height: this.props.height,\n            ...this.props.chartConfig\n          })}\n          <Rect\n            width=\"100%\"\n            height={this.props.height}\n            rx={borderRadius}\n            ry={borderRadius}\n            fill=\"url(#backgroundGradient)\"\n          />\n          <G\n            x={this.props.width / (hideLegend ? 2 : 2.5)}\n            y={this.props.height / 2}\n          >\n            <G>\n              {pieBackgrounds.map((pie, i) => {\n                return (\n                  <Path\n                    key={Math.random()}\n                    d={pie.curves[0].sector.path.print()}\n                    strokeWidth={strokeWidth}\n                    stroke={this.props.chartConfig.color(0.2, i)}\n                  />\n                );\n              })}\n            </G>\n            <G>\n              {pies.map((pie, i) => {\n                return (\n                  <Path\n                    key={Math.random()}\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d={pie.curves[0].sector.path.print()}\n                    strokeWidth={strokeWidth}\n                    stroke={\n                      this.props.withCustomBarColorFromData\n                        ? withColor(i)\n                        : this.props.chartConfig.color(\n                            (i / pies.length) * 0.5 + 0.5,\n                            i\n                          )\n                    }\n                  />\n                );\n              })}\n            </G>\n            {legend}\n          </G>\n        </Svg>\n      </View>\n    );\n  }\n}\n\nexport default ProgressChart;\n"]},"metadata":{},"sourceType":"module"}